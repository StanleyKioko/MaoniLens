{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL, API_ENDPOINTS, ERROR_MESSAGES } from '../utils/constants';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  // Add timestamp to prevent caching\n  config.params = {\n    ...config.params,\n    _t: Date.now()\n  };\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  console.error('API Error:', error);\n  if (error.response) {\n    // Server responded with error status\n    const status = error.response.status;\n    if (status === 404) {\n      throw new Error(ERROR_MESSAGES.DATA_NOT_FOUND);\n    } else if (status >= 500) {\n      throw new Error(ERROR_MESSAGES.SERVER_ERROR);\n    }\n  } else if (error.request) {\n    // Network error\n    throw new Error(ERROR_MESSAGES.NETWORK_ERROR);\n  }\n  throw error;\n});\n\n// API Service Functions\nexport const apiService = {\n  // Get sentiment data\n  getSentiment: async () => {\n    try {\n      return await api.get(API_ENDPOINTS.SENTIMENT);\n    } catch (error) {\n      console.error('Error fetching sentiment data:', error);\n      throw error;\n    }\n  },\n  // Get sentiment by topic\n  getSentimentByTopic: async () => {\n    try {\n      return await api.get(API_ENDPOINTS.SENTIMENT_BY_TOPIC);\n    } catch (error) {\n      console.error('Error fetching sentiment by topic:', error);\n      throw error;\n    }\n  },\n  // Get topics data\n  getTopics: async () => {\n    try {\n      return await api.get(API_ENDPOINTS.TOPICS);\n    } catch (error) {\n      console.error('Error fetching topics data:', error);\n      throw error;\n    }\n  },\n  // Get hashtags data\n  getHashtags: async () => {\n    try {\n      return await api.get(API_ENDPOINTS.HASHTAGS);\n    } catch (error) {\n      console.error('Error fetching hashtags data:', error);\n      throw error;\n    }\n  },\n  // Get influencers data\n  getInfluencers: async () => {\n    try {\n      return await api.get(API_ENDPOINTS.INFLUENCERS);\n    } catch (error) {\n      console.error('Error fetching influencers data:', error);\n      throw error;\n    }\n  },\n  // Get fake news data\n  getFakeNews: async () => {\n    try {\n      return await api.get(API_ENDPOINTS.FAKE_NEWS);\n    } catch (error) {\n      console.error('Error fetching fake news data:', error);\n      throw error;\n    }\n  },\n  // Get geographical data\n  getGeoData: async () => {\n    try {\n      return await api.get(API_ENDPOINTS.GEO_DATA);\n    } catch (error) {\n      console.error('Error fetching geo data:', error);\n      throw error;\n    }\n  },\n  // Submit feedback\n  submitFeedback: async feedbackData => {\n    try {\n      return await api.post(API_ENDPOINTS.FEEDBACK, feedbackData);\n    } catch (error) {\n      console.error('Error submitting feedback:', error);\n      throw error;\n    }\n  },\n  // Export data as CSV\n  exportData: async (dataType = 'hashtags') => {\n    try {\n      const response = await api.get(`/export/${dataType}`, {\n        responseType: 'blob'\n      });\n\n      // Create download link\n      const url = window.URL.createObjectURL(new Blob([response]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `maonibot_${dataType}_${Date.now()}.csv`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n      return true;\n    } catch (error) {\n      console.error('Error exporting data:', error);\n      throw error;\n    }\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","API_ENDPOINTS","ERROR_MESSAGES","api","create","baseURL","timeout","headers","interceptors","request","use","config","params","_t","Date","now","error","Promise","reject","response","data","console","status","Error","DATA_NOT_FOUND","SERVER_ERROR","NETWORK_ERROR","apiService","getSentiment","get","SENTIMENT","getSentimentByTopic","SENTIMENT_BY_TOPIC","getTopics","TOPICS","getHashtags","HASHTAGS","getInfluencers","INFLUENCERS","getFakeNews","FAKE_NEWS","getGeoData","GEO_DATA","submitFeedback","feedbackData","post","FEEDBACK","exportData","dataType","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL"],"sources":["C:/Users/HP/Desktop/Folders/MaoniLens/maonibot/frontend/src/components/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { API_BASE_URL, API_ENDPOINTS, ERROR_MESSAGES } from '../utils/constants';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Add timestamp to prevent caching\r\n    config.params = {\r\n      ...config.params,\r\n      _t: Date.now()\r\n    };\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', error);\r\n    \r\n    if (error.response) {\r\n      // Server responded with error status\r\n      const status = error.response.status;\r\n      if (status === 404) {\r\n        throw new Error(ERROR_MESSAGES.DATA_NOT_FOUND);\r\n      } else if (status >= 500) {\r\n        throw new Error(ERROR_MESSAGES.SERVER_ERROR);\r\n      }\r\n    } else if (error.request) {\r\n      // Network error\r\n      throw new Error(ERROR_MESSAGES.NETWORK_ERROR);\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n);\r\n\r\n// API Service Functions\r\nexport const apiService = {\r\n  // Get sentiment data\r\n  getSentiment: async () => {\r\n    try {\r\n      return await api.get(API_ENDPOINTS.SENTIMENT);\r\n    } catch (error) {\r\n      console.error('Error fetching sentiment data:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get sentiment by topic\r\n  getSentimentByTopic: async () => {\r\n    try {\r\n      return await api.get(API_ENDPOINTS.SENTIMENT_BY_TOPIC);\r\n    } catch (error) {\r\n      console.error('Error fetching sentiment by topic:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get topics data\r\n  getTopics: async () => {\r\n    try {\r\n      return await api.get(API_ENDPOINTS.TOPICS);\r\n    } catch (error) {\r\n      console.error('Error fetching topics data:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get hashtags data\r\n  getHashtags: async () => {\r\n    try {\r\n      return await api.get(API_ENDPOINTS.HASHTAGS);\r\n    } catch (error) {\r\n      console.error('Error fetching hashtags data:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get influencers data\r\n  getInfluencers: async () => {\r\n    try {\r\n      return await api.get(API_ENDPOINTS.INFLUENCERS);\r\n    } catch (error) {\r\n      console.error('Error fetching influencers data:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get fake news data\r\n  getFakeNews: async () => {\r\n    try {\r\n      return await api.get(API_ENDPOINTS.FAKE_NEWS);\r\n    } catch (error) {\r\n      console.error('Error fetching fake news data:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get geographical data\r\n  getGeoData: async () => {\r\n    try {\r\n      return await api.get(API_ENDPOINTS.GEO_DATA);\r\n    } catch (error) {\r\n      console.error('Error fetching geo data:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Submit feedback\r\n  submitFeedback: async (feedbackData) => {\r\n    try {\r\n      return await api.post(API_ENDPOINTS.FEEDBACK, feedbackData);\r\n    } catch (error) {\r\n      console.error('Error submitting feedback:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Export data as CSV\r\n  exportData: async (dataType = 'hashtags') => {\r\n    try {\r\n      const response = await api.get(`/export/${dataType}`, {\r\n        responseType: 'blob'\r\n      });\r\n      \r\n      // Create download link\r\n      const url = window.URL.createObjectURL(new Blob([response]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', `maonibot_${dataType}_${Date.now()}.csv`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n      window.URL.revokeObjectURL(url);\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error exporting data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}